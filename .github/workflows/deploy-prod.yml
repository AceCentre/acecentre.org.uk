name: Deploy Production
on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Everyday at 2AM
    - cron: "0 2 * * *"
concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  GetUniqueBuildId:
    runs-on: ubuntu-latest
    outputs:
      buildId: ${{ steps.time.outputs.dateTime }}
    steps:
      - name: Get Time
        id: time
        uses: Plabick/Remote-Time-Action@V1.0
        with:
          timezone: "GMT"

  DeployNetlify:
    runs-on: ubuntu-latest
    needs: [GetUniqueBuildId]
    outputs:
      lighthousePaths: ${{ steps.get-paths.outputs.result }}
      deploy-url: https://netlify.acecentre.org.uk
    environment:
      name: production
      url: https://netlify.acecentre.org.uk
    env:
      REDIS_URL: ${{ secrets.REDIS_URL }}
      GITHUB_SHA: ${{ github.sha }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      IMAGE_URL: https://netlify.acecentre.org.uk
      BUILD_ID: ${{ needs.GetUniqueBuildId.outputs.buildId }}
      DEPLOY_KEY: production
      PROM_KEY: ${{ secrets.PROM_KEY }}
      MAILCHIMP_SERVER: ${{ secrets.MAILCHIMP_SERVER }}
      MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      SLACK_SECRET: ${{ secrets.SLACK_SECRET }}

    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Setup
        uses: ./actions/setup

      - name: Run netlify build
        run: netlify build --context production

      - name: Run netlify deploy
        run: netlify deploy --prod

      - uses: actions/github-script@v4
        id: get-paths
        with:
          script: |
            const script = require('./scripts/sitemap-to-lighthouse-list')
            return script(context);

      - name: Unpatch deps
        run: yarn reverse-patch

  DeployNetlifyIntegration:
    runs-on: ubuntu-latest
    needs: [GetUniqueBuildId]
    environment:
      name: integration
      url: https://integration--acecentreorguk.netlify.app
    env:
      REDIS_URL: ${{ secrets.REDIS_URL }}
      GITHUB_SHA: ${{ github.sha }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      IMAGE_URL: https://integration--acecentreorguk.netlify.app
      BUILD_ID: ${{ needs.GetUniqueBuildId.outputs.buildId }}
      DEPLOY_KEY: integration
      PROM_KEY: ${{ secrets.PROM_KEY }}
      MAILCHIMP_SERVER: ${{ secrets.MAILCHIMP_SERVER }}
      MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      SLACK_SECRET: ${{ secrets.SLACK_SECRET }}

    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Patch deps
        run: yarn patch

      - name: Run netlify build
        run: netlify build --context deploy-preview

      - name: Run netlify deploy
        run: netlify deploy --alias=integration

      - name: Unpatch deps
        run: yarn reverse-patch

  Lighthouse:
    needs: [DeployNetlify]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJson(needs.DeployNetlify.outputs.lighthousePaths) }}
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Run Lighthouse
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_URL: ${{ needs.DeployNetlify.outputs.deploy-url }}
          LHCI_TOKEN: ${{ secrets.LHCI_BUILD_TOKEN }}
        run: yarn lighthouse --collect.url=${{ needs.DeployNetlify.outputs.deploy-url }}${{ matrix.path }}
