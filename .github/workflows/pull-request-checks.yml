name: Pull Request Checks
on: [pull_request, workflow_dispatch]
jobs:
  CalculateDeployKey:
    runs-on: ubuntu-latest
    outputs:
      deploy-key: ${{ steps.get-title.outputs.result }}
    steps:
      - name: Get Code
        uses: actions/checkout@v2
      - uses: actions/github-script@v4
        id: get-title
        with:
          result-encoding: string
          script: |
            const script = require('./scripts/calculate-deploy-key')
            return script(context);

  DeployNetlifyDraft:
    needs: CalculateDeployKey
    environment:
      name: ${{ needs.CalculateDeployKey.outputs.deploy-key }}
      url: https://${{ needs.CalculateDeployKey.outputs.deploy-key }}--acecentreorguk.netlify.app
    runs-on: ubuntu-latest
    outputs:
      deploy-name: ${{ needs.CalculateDeployKey.outputs.deploy-key }}
      deploy-url: https://${{ needs.CalculateDeployKey.outputs.deploy-key }}--acecentreorguk.netlify.app
    env:
      REDIS_URL: ${{ secrets.REDIS_URL }}
      GITHUB_SHA: ${{ github.sha }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      IMAGE_URL: https://${{ needs.CalculateDeployKey.outputs.deploy-key }}--acecentreorguk.netlify.app

    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Run netlify build
        run: netlify build --context deploy-preview --debug

      - name: Run netlify deploy
        run: netlify deploy --alias=${{ needs.CalculateDeployKey.outputs.deploy-key }}

  WarmUpCache:
    needs: DeployNetlifyDraft
    runs-on: ubuntu-latest
    steps:
      - name: Warm up resources
        run: curl ${{ needs.DeployNetlifyDraft.outputs.deploy-url }}/resources/all
      - name: Delay
        run: sleep 20

  Jest:
    runs-on: ubuntu-latest
    env:
      REDIS_URL: ${{ secrets.REDIS_URL }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Run Jest Tests
        run: yarn test

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: jest-coverage
          path: coverage
          # Github has size limits so this avoids hitting them
          retention-days: 1

  ESLint:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Run ESLint
        run: yarn run eslint .

  Cypress:
    needs: [WarmUpCache, DeployNetlifyDraft]
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Cypress run
        with:
          config: baseUrl=${{ needs.DeployNetlifyDraft.outputs.deploy-url }}
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: cypress-io/github-action@v2

  GetLighthousePaths:
    needs: [WarmUpCache, DeployNetlifyDraft]
    runs-on: ubuntu-latest
    outputs:
      lighthousePaths: ${{ steps.get-paths.outputs.result }}
    steps:
      - name: Get Code
        uses: actions/checkout@v2
      - uses: actions/github-script@v4
        id: get-paths
        with:
          script: |
            const paths = require('./lighthouse-paths')
            return paths;

  Lighthouse:
    needs: [GetLighthousePaths, DeployNetlifyDraft, Cypress]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJson(needs.GetLighthousePaths.outputs.lighthousePaths) }}
    steps:
      - name: Get Code
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM deps
        run: yarn install

      - name: Run Lighthouse
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_URL: ${{ needs.DeployNetlifyDraft.outputs.deploy-url }}
          LHCI_TOKEN: ${{ secrets.LHCI_BUILD_TOKEN }}
        run: yarn lighthouse --collect.url=${{ needs.DeployNetlifyDraft.outputs.deploy-url }}${{ matrix.path }}
