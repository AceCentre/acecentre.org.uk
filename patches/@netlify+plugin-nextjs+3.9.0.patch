diff --git a/node_modules/@netlify/plugin-nextjs/src/lib/templates/getHandlerFunction.js b/node_modules/@netlify/plugin-nextjs/src/lib/templates/getHandlerFunction.js
index cca952a..eb7d0b6 100644
--- a/node_modules/@netlify/plugin-nextjs/src/lib/templates/getHandlerFunction.js
+++ b/node_modules/@netlify/plugin-nextjs/src/lib/templates/getHandlerFunction.js
@@ -5,6 +5,7 @@ const { Buffer } = require('buffer')
 const http = require('http')
 const queryString = require('querystring')
 const Stream = require('stream')
+const client = require('prom-client');
 
 // Mock a HTTP IncomingMessage object from the Netlify Function event parameters
 // Based on API Gateway Lambda Compat
@@ -190,7 +191,33 @@ const getHandlerFunction = (nextPage) => async (event, context) => {
 
   // Get the request URL
   const { path } = event
-  console.log('[request]', path)
+  let normalisedPath = path;
+  console.log('[request]', path, normalisedPath)
+
+  if(path.includes("/_next/data")) {
+    normalisedPath = "/" + path.split("/_next/data/")[1].split("/").slice(1).join("/")
+  }
+
+  const deployKey = process.env.DEPLOY_KEY || 'unknown';
+
+  // Create a gateway and register for every request
+  const registry = new client.Registry();
+  let gateway = new client.Pushgateway(
+    "https://metrics-2k9hs.ondigitalocean.app/metrics", {}, registry
+  );
+
+  const counter = new client.Counter({
+    name: "function_call",
+    help: "Function call counter",
+    labelNames: ['context', 'path'],
+    registers: [registry]
+  });
+
+  counter.inc({ context: deployKey, path: normalisedPath }); // Increment by 1
+  
+  gateway.pushAdd({ jobName: "metric" }, function (err, resp, body) {
+    console.log('Pushed')
+  });
 
   // Render the Next.js page
   const response = await renderNextPage({ event, context }, nextPage)
